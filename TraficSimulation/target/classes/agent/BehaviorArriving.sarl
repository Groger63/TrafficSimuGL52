/** 
 * 
 */
package ^agent

import environnement.Car
import utils.Converter
import ^agent.BehaviorSeeking
/** 
 * @author Nicolas
 * 
 * Comportement que le conducteur adoptera lorsqu'une voiture se situera dans son champs de vision
 */
class BehaviorArriving {
	val stopDistance : float = 10
	def run(body : Car, distanceFromObject : float , maxSpeed : float) : float
	{
		var slowDownDistance = ((Converter.convertMStoKM(body.speed) / 10) * 6)
		if (slowDownDistance < 20) 
			slowDownDistance = 20  
		if (distanceFromObject > slowDownDistance)
			return new BehaviorSeeking().run(body, maxSpeed) 
		else
			return (new BehaviorFollowing()).computeIDM(body.maxAcc, body.maxDesc, distanceFromObject, body.speed,
				 maxSpeed, 0, slowDownDistance) 
			//computeIDM(body.speed, body.maxAcc, body.maxDesc, distanceFromObject, slowDownDistance, maxSpeed)
	}
	def computeIDM(speed : float, maxAcc : float, maxDesc : float, distanceFromObject : float, slowDownDistance : float, maxSpeed : float) : float
	{
		return -maxDesc
	}
}