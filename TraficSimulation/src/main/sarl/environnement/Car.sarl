/** 
 * Corps de l'agent Conducteur
 */
package environnement

import environnement.CarModel
import java.util.UUID
import javafx.scene.paint.Color
import org.arakhne.afc.gis.road.primitive.RoadConnection
import org.arakhne.afc.gis.road.primitive.RoadSegment
import java.util.ArrayList

/**  
 * @author Nulboroth
 * 
 */
class Car extends AbstractMobileObject{  
	var model : CarModel  //Modèle du corps
	var color : Color 		//Couleur du corps
	var gps : ArrayList<RoadSegment>   //Route GPS
	
	/**
	 * @param id UUID désignant l'objet
	 * @param length Longueur de l'élément **UNUSED**
	 * @param point Point d'entrée de l'objet sur le RoadSegment
	 * @param maxSpeed Vitesse maximale atteignable par le corps
	 * @param maxAcc Accélération maximale de l'objet
	 * @param minAcc Descélération maximale de l'objet
	 * @param color Couleur d'affichage de l'objet
	 */
	new(id : UUID, length : float, point : RoadConnection, maxSpeed : float, maxAcc : float, minAcc : float, color : Color)
	{
		super(id, length, point, maxSpeed, maxAcc, minAcc)
		this.model = null
		this.color = color
	} 
	
	/**
	 * @param id UUID désignant l'objet
	 * @param connect Point d'entrée de l'objet sur le RoadSegment
	 * @param model Modèle de la voiture
	 */
	new(id : UUID, connect : RoadConnection, model : CarModel) { 
		
		this(id, model.length, connect, model.maxSpeed, model.maxAcc, model.minAcc, model.color) 
		this.model = model
	}
	 
	def setModel(model : CarModel) : void
	{
		this.color = model.color
		this.length = model.length
		this.maxSpeed = model.maxSpeed
		this.maxAcc = model.maxAcc
		this.model = model 
	} 
	override getMaxSpeed : float
	{
		return this.model.maxSpeed
	}

	override getMaxAcc : float {
		return this.model.maxAcc
	}
 
	def getMinAcc : float {
		return this.model.minAcc
	}

	def getModel : CarModel {
		return this.model 
	}

	def getColor : Color {
		return this.color
	}
	def getGps : ArrayList<RoadSegment> 
	{
		return this.gps
	} 
	def setGps(roads : ArrayList<RoadSegment>) : void
	{
		this.gps = roads
	}
}
